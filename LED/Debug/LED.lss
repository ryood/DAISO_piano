
LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000d2  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000145  00000000  00000000  00000122  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d3  00000000  00000000  00000267  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000144  00000000  00000000  0000033a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000480  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000169  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  0000060d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	02 d0       	rcall	.+4      	; 0x46 <main>
  42:	1b c0       	rjmp	.+54     	; 0x7a <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	PORTB = 0xFF;
  46:	8f ef       	ldi	r24, 0xFF	; 255
  48:	85 b9       	out	0x05, r24	; 5
	DDRB  = 0xFF;
  4a:	84 b9       	out	0x04, r24	; 4
	
    while(1)
    {
        PORTB = 0xAA;
  4c:	9a ea       	ldi	r25, 0xAA	; 170
		_delay_ms(500);
		PORTB = 0x55;
  4e:	85 e5       	ldi	r24, 0x55	; 85
	PORTB = 0xFF;
	DDRB  = 0xFF;
	
    while(1)
    {
        PORTB = 0xAA;
  50:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  52:	2f ef       	ldi	r18, 0xFF	; 255
  54:	34 e3       	ldi	r19, 0x34	; 52
  56:	4c e0       	ldi	r20, 0x0C	; 12
  58:	21 50       	subi	r18, 0x01	; 1
  5a:	30 40       	sbci	r19, 0x00	; 0
  5c:	40 40       	sbci	r20, 0x00	; 0
  5e:	e1 f7       	brne	.-8      	; 0x58 <main+0x12>
  60:	00 c0       	rjmp	.+0      	; 0x62 <main+0x1c>
  62:	00 00       	nop
		_delay_ms(500);
		PORTB = 0x55;
  64:	85 b9       	out	0x05, r24	; 5
  66:	2f ef       	ldi	r18, 0xFF	; 255
  68:	34 e3       	ldi	r19, 0x34	; 52
  6a:	4c e0       	ldi	r20, 0x0C	; 12
  6c:	21 50       	subi	r18, 0x01	; 1
  6e:	30 40       	sbci	r19, 0x00	; 0
  70:	40 40       	sbci	r20, 0x00	; 0
  72:	e1 f7       	brne	.-8      	; 0x6c <main+0x26>
  74:	00 c0       	rjmp	.+0      	; 0x76 <main+0x30>
  76:	00 00       	nop
  78:	eb cf       	rjmp	.-42     	; 0x50 <main+0xa>

0000007a <_exit>:
  7a:	f8 94       	cli

0000007c <__stop_program>:
  7c:	ff cf       	rjmp	.-2      	; 0x7c <__stop_program>
