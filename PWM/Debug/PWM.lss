
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000430  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000b  00800100  00800100  000004a4  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000040  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000007f3  00000000  00000000  00000514  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000001c0  00000000  00000000  00000d07  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000023d  00000000  00000000  00000ec7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000ac  00000000  00000000  00001104  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000220  00000000  00000000  000011b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000156  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000168  00000000  00000000  00001526  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	79 c0       	rjmp	.+242    	; 0xf4 <__ctors_end>
   2:	88 c0       	rjmp	.+272    	; 0x114 <__bad_interrupt>
   4:	87 c0       	rjmp	.+270    	; 0x114 <__bad_interrupt>
   6:	86 c0       	rjmp	.+268    	; 0x114 <__bad_interrupt>
   8:	85 c0       	rjmp	.+266    	; 0x114 <__bad_interrupt>
   a:	84 c0       	rjmp	.+264    	; 0x114 <__bad_interrupt>
   c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
   e:	82 c0       	rjmp	.+260    	; 0x114 <__bad_interrupt>
  10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
  12:	80 c0       	rjmp	.+256    	; 0x114 <__bad_interrupt>
  14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
  16:	a2 c0       	rjmp	.+324    	; 0x15c <__vector_11>
  18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
  1a:	7c c0       	rjmp	.+248    	; 0x114 <__bad_interrupt>
  1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
  1e:	7a c0       	rjmp	.+244    	; 0x114 <__bad_interrupt>
  20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
  22:	78 c0       	rjmp	.+240    	; 0x114 <__bad_interrupt>
  24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
  26:	76 c0       	rjmp	.+236    	; 0x114 <__bad_interrupt>
  28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
  2a:	74 c0       	rjmp	.+232    	; 0x114 <__bad_interrupt>
  2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
  2e:	72 c0       	rjmp	.+228    	; 0x114 <__bad_interrupt>
  30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
  32:	70 c0       	rjmp	.+224    	; 0x114 <__bad_interrupt>

00000034 <__trampolines_end>:
	...
  54:	3f 3f       	cpi	r19, 0xFF	; 255
  56:	3f 3f       	cpi	r19, 0xFF	; 255
  58:	3f 3f       	cpi	r19, 0xFF	; 255
  5a:	3f 3f       	cpi	r19, 0xFF	; 255
  5c:	3f 3f       	cpi	r19, 0xFF	; 255
  5e:	3f 3f       	cpi	r19, 0xFF	; 255
  60:	3f 3f       	cpi	r19, 0xFF	; 255
  62:	3f 3f       	cpi	r19, 0xFF	; 255
  64:	3f 3f       	cpi	r19, 0xFF	; 255
  66:	3f 3f       	cpi	r19, 0xFF	; 255
  68:	3f 3f       	cpi	r19, 0xFF	; 255
  6a:	3f 3f       	cpi	r19, 0xFF	; 255
  6c:	3f 3f       	cpi	r19, 0xFF	; 255
  6e:	3f 3f       	cpi	r19, 0xFF	; 255
  70:	3f 3f       	cpi	r19, 0xFF	; 255
  72:	3f 3f       	cpi	r19, 0xFF	; 255

00000074 <sawTable>:
  74:	00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f     ................
  84:	10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
  94:	20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f      !"#$%&'()*+,-./
  a4:	30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f     0123456789:;<=>?

000000b4 <sinTable>:
  b4:	1f 1c 19 16 13 10 0e 0b 09 07 05 03 02 01 00 00     ................
  c4:	00 00 00 01 02 03 05 07 09 0b 0e 10 13 16 19 1c     ................
  d4:	1f 23 26 29 2c 2f 31 34 36 38 3a 3c 3d 3e 3f 3f     .#&),/1468:<=>??
  e4:	3f 3f 3f 3e 3d 3c 3a 38 36 34 31 2f 2c 29 26 23     ???>=<:8641/,)&#

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	d4 e0       	ldi	r29, 0x04	; 4
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	cd bf       	out	0x3d, r28	; 61

00000100 <__do_clear_bss>:
 100:	21 e0       	ldi	r18, 0x01	; 1
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b1 e0       	ldi	r27, 0x01	; 1
 106:	01 c0       	rjmp	.+2      	; 0x10a <.do_clear_bss_start>

00000108 <.do_clear_bss_loop>:
 108:	1d 92       	st	X+, r1

0000010a <.do_clear_bss_start>:
 10a:	ab 30       	cpi	r26, 0x0B	; 11
 10c:	b2 07       	cpc	r27, r18
 10e:	e1 f7       	brne	.-8      	; 0x108 <.do_clear_bss_loop>
 110:	4b d0       	rcall	.+150    	; 0x1a8 <main>
 112:	8c c1       	rjmp	.+792    	; 0x42c <_exit>

00000114 <__bad_interrupt>:
 114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <generateSawWave>:
//
uint8_t generateSawWave()
{
	uint8_t index;
	
	phaseAccumlator += tuningWord;
 116:	80 91 00 01 	lds	r24, 0x0100
 11a:	90 91 01 01 	lds	r25, 0x0101
 11e:	20 91 02 01 	lds	r18, 0x0102
 122:	30 91 03 01 	lds	r19, 0x0103
 126:	82 0f       	add	r24, r18
 128:	93 1f       	adc	r25, r19
 12a:	90 93 01 01 	sts	0x0101, r25
 12e:	80 93 00 01 	sts	0x0100, r24
	
	// 右へシフト: 16bit -> 6bit(64個)
	index = phaseAccumlator >> 10;
 132:	e0 91 00 01 	lds	r30, 0x0100
 136:	f0 91 01 01 	lds	r31, 0x0101
	return pgm_read_byte(waveForms[waveForm] + index);
 13a:	a0 91 04 01 	lds	r26, 0x0104
 13e:	b0 e0       	ldi	r27, 0x00	; 0
 140:	aa 0f       	add	r26, r26
 142:	bb 1f       	adc	r27, r27
 144:	ab 5f       	subi	r26, 0xFB	; 251
 146:	be 4f       	sbci	r27, 0xFE	; 254
	uint8_t index;
	
	phaseAccumlator += tuningWord;
	
	// 右へシフト: 16bit -> 6bit(64個)
	index = phaseAccumlator >> 10;
 148:	ef 2f       	mov	r30, r31
 14a:	ff 27       	eor	r31, r31
 14c:	e6 95       	lsr	r30
 14e:	e6 95       	lsr	r30
	return pgm_read_byte(waveForms[waveForm] + index);
 150:	8d 91       	ld	r24, X+
 152:	9c 91       	ld	r25, X
 154:	e8 0f       	add	r30, r24
 156:	f9 1f       	adc	r31, r25
 158:	84 91       	lpm	r24, Z
}
 15a:	08 95       	ret

0000015c <__vector_11>:
// Timer1割り込みハンドラ
//
// ----------------------------------------------------------------------------
//
ISR(TIMER1_COMPA_vect)
{
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	2f 93       	push	r18
 168:	3f 93       	push	r19
 16a:	4f 93       	push	r20
 16c:	5f 93       	push	r21
 16e:	6f 93       	push	r22
 170:	7f 93       	push	r23
 172:	8f 93       	push	r24
 174:	9f 93       	push	r25
 176:	af 93       	push	r26
 178:	bf 93       	push	r27
 17a:	ef 93       	push	r30
 17c:	ff 93       	push	r31
	uint8_t v;	// PWM出力値
	
	#if DEBUG
	PORTD |= (1 << PORTD6);
 17e:	5e 9a       	sbi	0x0b, 6	; 11
	#endif
	
	v = generateSawWave();
 180:	ca df       	rcall	.-108    	; 0x116 <generateSawWave>
// parameter: value: 設定するDuty(0 .. OCR0A)
//
void setPWMDuty(uint8_t value)
{
	// PWMのデューティー比を設定
	OCR0B = value;
 182:	88 bd       	out	0x28, r24	; 40
	
	v = generateSawWave();
	setPWMDuty(v);
	
	#if DEBUG
	PORTD &= ~(1 << PORTD6);
 184:	5e 98       	cbi	0x0b, 6	; 11
	#endif
}
 186:	ff 91       	pop	r31
 188:	ef 91       	pop	r30
 18a:	bf 91       	pop	r27
 18c:	af 91       	pop	r26
 18e:	9f 91       	pop	r25
 190:	8f 91       	pop	r24
 192:	7f 91       	pop	r23
 194:	6f 91       	pop	r22
 196:	5f 91       	pop	r21
 198:	4f 91       	pop	r20
 19a:	3f 91       	pop	r19
 19c:	2f 91       	pop	r18
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <main>:
//=============================================================================
// メイン・ルーチン
//
int main()
{
	waveForms[0] = sinTable;
 1a8:	84 eb       	ldi	r24, 0xB4	; 180
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	90 93 06 01 	sts	0x0106, r25
 1b0:	80 93 05 01 	sts	0x0105, r24
	waveForms[1] = sawTable;
 1b4:	84 e7       	ldi	r24, 0x74	; 116
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	90 93 08 01 	sts	0x0108, r25
 1bc:	80 93 07 01 	sts	0x0107, r24
	waveForms[2] = sqrTable;
 1c0:	84 e3       	ldi	r24, 0x34	; 52
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	90 93 0a 01 	sts	0x010A, r25
 1c8:	80 93 09 01 	sts	0x0109, r24
	
	//-------------------------------------------------------------------------
	// PORT設定
	//-------------------------------------------------------------------------
	DDRD |= (1 << DDD5);    // PD5(OC0B): PWM out
 1cc:	55 9a       	sbi	0x0a, 5	; 10
	
	#if DEBUG
	DDRD |= (1 << DDB6);    // PD6: output
 1ce:	56 9a       	sbi	0x0a, 6	; 10
	//-------------------------------------------------------------------------
	// PWM設定
	//-------------------------------------------------------------------------
	// 波形生成モード: WGM0: 1:1:1
	// 高速PWM(モード7)
	TCCR0A |= (1 << WGM01) | (1 << WGM00);
 1d0:	84 b5       	in	r24, 0x24	; 36
 1d2:	83 60       	ori	r24, 0x03	; 3
 1d4:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << WGM02);
 1d6:	85 b5       	in	r24, 0x25	; 37
 1d8:	88 60       	ori	r24, 0x08	; 8
 1da:	85 bd       	out	0x25, r24	; 37
	//-------------------------------------------------------------------------
	// コンペア・アウトプットB: COM0B: 1:0
	// コンペア・マッチでOC0Bクリア、TOPでOC0Bセット
	TCCR0A |= (1 << COM0B1) | (0 << COM0B0);
 1dc:	84 b5       	in	r24, 0x24	; 36
 1de:	80 62       	ori	r24, 0x20	; 32
 1e0:	84 bd       	out	0x24, r24	; 36
	//-------------------------------------------------------------------------
	// クロック設定: CS0: 0:0:1
	// 分周なし
	TCCR0B |= (0 << CS02) | (0 << CS01) | (1 << CS00);
 1e2:	85 b5       	in	r24, 0x25	; 37
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	85 bd       	out	0x25, r24	; 37
	// TCCR0A = 0b00100011;
	// TCCR0B = 0B00001001;
	
	//-------------------------------------------------------------------------
	// 分解能 6bit(0 .. 63)
	OCR0A = 64;
 1e8:	80 e4       	ldi	r24, 0x40	; 64
 1ea:	87 bd       	out	0x27, r24	; 39
	//-------------------------------------------------------------------------
	// Timer1設定
	//-------------------------------------------------------------------------
	// 波形生成モード: WGM0: 1:1:1:1
	// 高速PWM(モード15)
	TCCR1B |= (1 << WGM13) | (1 << WGM12);
 1ec:	e1 e8       	ldi	r30, 0x81	; 129
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	88 61       	ori	r24, 0x18	; 24
 1f4:	80 83       	st	Z, r24
	TCCR1A |= (1 << WGM11) | (1 << WGM10);
 1f6:	a0 e8       	ldi	r26, 0x80	; 128
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	8c 91       	ld	r24, X
 1fc:	83 60       	ori	r24, 0x03	; 3
 1fe:	8c 93       	st	X, r24
	//-------------------------------------------------------------------------
	// クロック設定: CS1: 0:1:0
	// 1/8分周
	TCCR1B |= (1 << CS11);
 200:	80 81       	ld	r24, Z
 202:	82 60       	ori	r24, 0x02	; 2
 204:	80 83       	st	Z, r24
	//-------------------------------------------------------------------------
	// Compare 1A match interrupt enable
	TIMSK1 = (1 << OCIE1A);
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	80 93 6f 00 	sts	0x006F, r24
	//-------------------------------------------------------------------------
	// Compare resister 1A
	// サンプリングレートの設定
	// (F_CPU / prescaler) / SAMPLE_RATE
	OCR1A = (F_CPU / 8) / SAMPLE_CLOCK;
 20c:	8e e3       	ldi	r24, 0x3E	; 62
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	90 93 89 00 	sts	0x0089, r25
 214:	80 93 88 00 	sts	0x0088, r24
	
	//setDDSParameter(1000);
	
	sei();
 218:	78 94       	sei
// setDDSParameter()
// parameter: frequency: 生成する周波数
//
void setDDSParameter(float frequency)
{
	tuningWord = (uint16_t)(frequency * POW_2_16 / SAMPLE_CLOCK);
 21a:	0f 2e       	mov	r0, r31
 21c:	f7 e1       	ldi	r31, 0x17	; 23
 21e:	cf 2e       	mov	r12, r31
 220:	f2 e0       	ldi	r31, 0x02	; 2
 222:	df 2e       	mov	r13, r31
 224:	f0 2d       	mov	r31, r0
 226:	0f 2e       	mov	r0, r31
 228:	f9 e5       	ldi	r31, 0x59	; 89
 22a:	ef 2e       	mov	r14, r31
 22c:	f2 e0       	ldi	r31, 0x02	; 2
 22e:	ff 2e       	mov	r15, r31
 230:	f0 2d       	mov	r31, r0
 232:	03 ea       	ldi	r16, 0xA3	; 163
 234:	12 e0       	ldi	r17, 0x02	; 2
 236:	cb ec       	ldi	r28, 0xCB	; 203
 238:	d2 e0       	ldi	r29, 0x02	; 2
 23a:	a2 e2       	ldi	r26, 0x22	; 34
 23c:	b3 e0       	ldi	r27, 0x03	; 3
 23e:	e5 e8       	ldi	r30, 0x85	; 133
 240:	f3 e0       	ldi	r31, 0x03	; 3
 242:	63 ef       	ldi	r22, 0xF3	; 243
 244:	73 e0       	ldi	r23, 0x03	; 3
 246:	4f e2       	ldi	r20, 0x2F	; 47
 248:	54 e0       	ldi	r21, 0x04	; 4
 24a:	0f 2e       	mov	r0, r31
 24c:	f6 e9       	ldi	r31, 0x96	; 150
 24e:	af 2e       	mov	r10, r31
 250:	f5 e0       	ldi	r31, 0x05	; 5
 252:	bf 2e       	mov	r11, r31
 254:	f0 2d       	mov	r31, r0
 256:	0f 2e       	mov	r0, r31
 258:	f5 e4       	ldi	r31, 0x45	; 69
 25a:	8f 2e       	mov	r8, r31
 25c:	f6 e0       	ldi	r31, 0x06	; 6
 25e:	9f 2e       	mov	r9, r31
 260:	f0 2d       	mov	r31, r0
 262:	0f 2e       	mov	r0, r31
 264:	fa e0       	ldi	r31, 0x0A	; 10
 266:	6f 2e       	mov	r6, r31
 268:	f7 e0       	ldi	r31, 0x07	; 7
 26a:	7f 2e       	mov	r7, r31
 26c:	f0 2d       	mov	r31, r0
 26e:	0f 2e       	mov	r0, r31
 270:	f6 ee       	ldi	r31, 0xE6	; 230
 272:	4f 2e       	mov	r4, r31
 274:	f7 e0       	ldi	r31, 0x07	; 7
 276:	5f 2e       	mov	r5, r31
 278:	f0 2d       	mov	r31, r0
	
	sei();

	for (;;) {
		// 波形切替
		waveForm++;
 27a:	30 90 04 01 	lds	r3, 0x0104
 27e:	33 94       	inc	r3
 280:	30 92 04 01 	sts	0x0104, r3
		if (waveForm == WAVE_N) {
 284:	30 90 04 01 	lds	r3, 0x0104
 288:	0f 2e       	mov	r0, r31
 28a:	f3 e0       	ldi	r31, 0x03	; 3
 28c:	2f 2e       	mov	r2, r31
 28e:	f0 2d       	mov	r31, r0
 290:	32 10       	cpse	r3, r2
 292:	02 c0       	rjmp	.+4      	; 0x298 <main+0xf0>
			waveForm = 0;
 294:	10 92 04 01 	sts	0x0104, r1
// setDDSParameter()
// parameter: frequency: 生成する周波数
//
void setDDSParameter(float frequency)
{
	tuningWord = (uint16_t)(frequency * POW_2_16 / SAMPLE_CLOCK);
 298:	d0 92 03 01 	sts	0x0103, r13
 29c:	c0 92 02 01 	sts	0x0102, r12
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	84 e3       	ldi	r24, 0x34	; 52
 2a4:	9c e0       	ldi	r25, 0x0C	; 12
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0xfe>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x108>
 2b0:	00 00       	nop
 2b2:	f0 92 03 01 	sts	0x0103, r15
 2b6:	e0 92 02 01 	sts	0x0102, r14
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	84 e3       	ldi	r24, 0x34	; 52
 2be:	9c e0       	ldi	r25, 0x0C	; 12
 2c0:	21 50       	subi	r18, 0x01	; 1
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <main+0x118>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <main+0x122>
 2ca:	00 00       	nop
 2cc:	10 93 03 01 	sts	0x0103, r17
 2d0:	00 93 02 01 	sts	0x0102, r16
 2d4:	2f ef       	ldi	r18, 0xFF	; 255
 2d6:	84 e3       	ldi	r24, 0x34	; 52
 2d8:	9c e0       	ldi	r25, 0x0C	; 12
 2da:	21 50       	subi	r18, 0x01	; 1
 2dc:	80 40       	sbci	r24, 0x00	; 0
 2de:	90 40       	sbci	r25, 0x00	; 0
 2e0:	e1 f7       	brne	.-8      	; 0x2da <main+0x132>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <main+0x13c>
 2e4:	00 00       	nop
 2e6:	d0 93 03 01 	sts	0x0103, r29
 2ea:	c0 93 02 01 	sts	0x0102, r28
 2ee:	2f ef       	ldi	r18, 0xFF	; 255
 2f0:	84 e3       	ldi	r24, 0x34	; 52
 2f2:	9c e0       	ldi	r25, 0x0C	; 12
 2f4:	21 50       	subi	r18, 0x01	; 1
 2f6:	80 40       	sbci	r24, 0x00	; 0
 2f8:	90 40       	sbci	r25, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x14c>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x156>
 2fe:	00 00       	nop
 300:	b0 93 03 01 	sts	0x0103, r27
 304:	a0 93 02 01 	sts	0x0102, r26
 308:	2f ef       	ldi	r18, 0xFF	; 255
 30a:	84 e3       	ldi	r24, 0x34	; 52
 30c:	9c e0       	ldi	r25, 0x0C	; 12
 30e:	21 50       	subi	r18, 0x01	; 1
 310:	80 40       	sbci	r24, 0x00	; 0
 312:	90 40       	sbci	r25, 0x00	; 0
 314:	e1 f7       	brne	.-8      	; 0x30e <main+0x166>
 316:	00 c0       	rjmp	.+0      	; 0x318 <main+0x170>
 318:	00 00       	nop
 31a:	f0 93 03 01 	sts	0x0103, r31
 31e:	e0 93 02 01 	sts	0x0102, r30
 322:	2f ef       	ldi	r18, 0xFF	; 255
 324:	84 e3       	ldi	r24, 0x34	; 52
 326:	9c e0       	ldi	r25, 0x0C	; 12
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	80 40       	sbci	r24, 0x00	; 0
 32c:	90 40       	sbci	r25, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <main+0x180>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0x18a>
 332:	00 00       	nop
 334:	70 93 03 01 	sts	0x0103, r23
 338:	60 93 02 01 	sts	0x0102, r22
 33c:	2f ef       	ldi	r18, 0xFF	; 255
 33e:	84 e3       	ldi	r24, 0x34	; 52
 340:	9c e0       	ldi	r25, 0x0C	; 12
 342:	21 50       	subi	r18, 0x01	; 1
 344:	80 40       	sbci	r24, 0x00	; 0
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <main+0x19a>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x1a4>
 34c:	00 00       	nop
 34e:	50 93 03 01 	sts	0x0103, r21
 352:	40 93 02 01 	sts	0x0102, r20
 356:	2f ef       	ldi	r18, 0xFF	; 255
 358:	84 e3       	ldi	r24, 0x34	; 52
 35a:	9c e0       	ldi	r25, 0x0C	; 12
 35c:	21 50       	subi	r18, 0x01	; 1
 35e:	80 40       	sbci	r24, 0x00	; 0
 360:	90 40       	sbci	r25, 0x00	; 0
 362:	e1 f7       	brne	.-8      	; 0x35c <main+0x1b4>
 364:	00 c0       	rjmp	.+0      	; 0x366 <main+0x1be>
 366:	00 00       	nop
 368:	82 eb       	ldi	r24, 0xB2	; 178
 36a:	94 e0       	ldi	r25, 0x04	; 4
 36c:	90 93 03 01 	sts	0x0103, r25
 370:	80 93 02 01 	sts	0x0102, r24
 374:	9f ef       	ldi	r25, 0xFF	; 255
 376:	24 e3       	ldi	r18, 0x34	; 52
 378:	8c e0       	ldi	r24, 0x0C	; 12
 37a:	91 50       	subi	r25, 0x01	; 1
 37c:	20 40       	sbci	r18, 0x00	; 0
 37e:	80 40       	sbci	r24, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <main+0x1d2>
 382:	00 c0       	rjmp	.+0      	; 0x384 <main+0x1dc>
 384:	00 00       	nop
 386:	86 e4       	ldi	r24, 0x46	; 70
 388:	95 e0       	ldi	r25, 0x05	; 5
 38a:	90 93 03 01 	sts	0x0103, r25
 38e:	80 93 02 01 	sts	0x0102, r24
 392:	9f ef       	ldi	r25, 0xFF	; 255
 394:	24 e3       	ldi	r18, 0x34	; 52
 396:	8c e0       	ldi	r24, 0x0C	; 12
 398:	91 50       	subi	r25, 0x01	; 1
 39a:	20 40       	sbci	r18, 0x00	; 0
 39c:	80 40       	sbci	r24, 0x00	; 0
 39e:	e1 f7       	brne	.-8      	; 0x398 <main+0x1f0>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <main+0x1fa>
 3a2:	00 00       	nop
 3a4:	b0 92 03 01 	sts	0x0103, r11
 3a8:	a0 92 02 01 	sts	0x0102, r10
 3ac:	9f ef       	ldi	r25, 0xFF	; 255
 3ae:	24 e3       	ldi	r18, 0x34	; 52
 3b0:	8c e0       	ldi	r24, 0x0C	; 12
 3b2:	91 50       	subi	r25, 0x01	; 1
 3b4:	20 40       	sbci	r18, 0x00	; 0
 3b6:	80 40       	sbci	r24, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <main+0x20a>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <main+0x214>
 3bc:	00 00       	nop
 3be:	90 92 03 01 	sts	0x0103, r9
 3c2:	80 92 02 01 	sts	0x0102, r8
 3c6:	9f ef       	ldi	r25, 0xFF	; 255
 3c8:	24 e3       	ldi	r18, 0x34	; 52
 3ca:	8c e0       	ldi	r24, 0x0C	; 12
 3cc:	91 50       	subi	r25, 0x01	; 1
 3ce:	20 40       	sbci	r18, 0x00	; 0
 3d0:	80 40       	sbci	r24, 0x00	; 0
 3d2:	e1 f7       	brne	.-8      	; 0x3cc <main+0x224>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <main+0x22e>
 3d6:	00 00       	nop
 3d8:	70 92 03 01 	sts	0x0103, r7
 3dc:	60 92 02 01 	sts	0x0102, r6
 3e0:	9f ef       	ldi	r25, 0xFF	; 255
 3e2:	24 e3       	ldi	r18, 0x34	; 52
 3e4:	8c e0       	ldi	r24, 0x0C	; 12
 3e6:	91 50       	subi	r25, 0x01	; 1
 3e8:	20 40       	sbci	r18, 0x00	; 0
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x23e>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x248>
 3f0:	00 00       	nop
 3f2:	50 92 03 01 	sts	0x0103, r5
 3f6:	40 92 02 01 	sts	0x0102, r4
 3fa:	9f ef       	ldi	r25, 0xFF	; 255
 3fc:	24 e3       	ldi	r18, 0x34	; 52
 3fe:	8c e0       	ldi	r24, 0x0C	; 12
 400:	91 50       	subi	r25, 0x01	; 1
 402:	20 40       	sbci	r18, 0x00	; 0
 404:	80 40       	sbci	r24, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <main+0x258>
 408:	00 c0       	rjmp	.+0      	; 0x40a <main+0x262>
 40a:	00 00       	nop
 40c:	8f e5       	ldi	r24, 0x5F	; 95
 40e:	98 e0       	ldi	r25, 0x08	; 8
 410:	90 93 03 01 	sts	0x0103, r25
 414:	80 93 02 01 	sts	0x0102, r24
 418:	9f ef       	ldi	r25, 0xFF	; 255
 41a:	24 e3       	ldi	r18, 0x34	; 52
 41c:	8c e0       	ldi	r24, 0x0C	; 12
 41e:	91 50       	subi	r25, 0x01	; 1
 420:	20 40       	sbci	r18, 0x00	; 0
 422:	80 40       	sbci	r24, 0x00	; 0
 424:	e1 f7       	brne	.-8      	; 0x41e <main+0x276>
 426:	00 c0       	rjmp	.+0      	; 0x428 <main+0x280>
 428:	00 00       	nop
 42a:	27 cf       	rjmp	.-434    	; 0x27a <main+0xd2>

0000042c <_exit>:
 42c:	f8 94       	cli

0000042e <__stop_program>:
 42e:	ff cf       	rjmp	.-2      	; 0x42e <__stop_program>
